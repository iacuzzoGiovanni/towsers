// Generated by CoffeeScript 1.11.1

/*
 * Created by Iacuzzo Giovanni
 */
(function() {
  'use-strict';

  /*
   * @module {customContact}
   */
  var cContact;
  cContact = angular.module('customContact', ['angular-click-outside']);
  cContact.controller('contactController', [
    '$scope', 'Contact', function($scope, Contact) {
      var contact;
      contact = this;
      contact.isOpen = false;
      Contact.get().then(function(d) {
        contact.data = d.page.custom_fields;
      });
      contact.onOpen = function() {
        if (contact.isOpen === false) {
          contact.isOpen = true;
          return contact.webpage.classList.add('contactModalIsOpen');
        }
      };
      contact.onClose = function() {
        if (contact.isOpen === true) {
          contact.isOpen = false;
          return contact.webpage.classList.remove('contactModalIsOpen');
        }
      };
      contact.collectionHas = function(a, b) {
        var i, len;
        i = 0;
        len = a.length;
        while (i < len) {
          if (a[i] === b) {
            return true;
          }
          i++;
        }
        return false;
      };
      contact.findParentBySelector = function(elm, selector) {
        var all, cur;
        all = document.querySelectorAll(selector);
        cur = elm.parentNode;
        while (cur && !contact.collectionHas(all, cur)) {
          cur = cur.parentNode;
        }
        return cur;
      };
    }
  ]);
  cContact.directive('contactModal', [
    function() {
      return {
        restrict: 'E',
        templateUrl: myLocalized.partials + 'contact.html',
        controller: 'contactController',
        controllerAs: 'contact',
        link: function(scope, element, attrs, contact) {
          contact.modalDialog = element[0].querySelector('#contactModal');
          contact.webpage = contact.findParentBySelector(element[0], '.page');
          contact.modalDialog.style.left = Math.round((window.innerWidth - contact.modalDialog.offsetWidth) / 2) + 'px';
          window.addEventListener('resize', function() {
            return contact.modalDialog.style.left = Math.round((window.innerWidth - contact.modalDialog.offsetWidth) / 2) + 'px';
          }, false);
        }
      };
    }
  ]);
  cContact.directive('contactNavLink', [
    function() {
      return {
        restrict: 'E',
        require: '^?contactModal',
        templateUrl: myLocalized.partials + 'contact-nav-link.html',
        link: function(scope, element, attrs) {}
      };
    }
  ]);
})();
